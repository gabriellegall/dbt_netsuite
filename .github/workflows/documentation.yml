name: dbt_prod_doc_serve

on:
  schedule:
    - cron: '0 0 * * *'  # Runs every day at midnight
  workflow_dispatch:  # Allows manual triggering from the Actions tab

jobs:
  # Job to generate and upload artifacts (docs)
  dbt_prod_doc_serve_job:
    runs-on: ubuntu-latest
    steps:
      - name: checkout_repository
        uses: actions/checkout@v3
        
      - name: dbt_compile_and_generate_docs
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/netsuite_project \
            -w /netsuite_project \
            gabriellegall/dbt-netsuite-image \
            bash -c "
              export SQLSERVER_HOST='${{ secrets.SQLSERVER_HOST }}' &&
              export SQLSERVER_USER='${{ secrets.SQLSERVER_USER }}' &&
              export SQLSERVER_PASSWORD='${{ secrets.SQLSERVER_PASSWORD }}' &&
              dbt deps &&
              make dbt_prod_compile &&
              make dbt_prod_doc_generate
            "
            
      - name: Check for symlinks and hard links
        run: |
          echo "Checking for symbolic links..."
          if find target -type l | grep -q .; then
            echo "Error: Found symbolic links in the target directory."
            exit 1
          else
            echo "No symbolic links found."
          fi

          echo "Checking for hard links..."
          if find target -type f -links +1 | grep -q .; then
            echo "Error: Found hard links in the target directory."
            exit 1
          else
            echo "No hard links found."
          fi

      - name: Upload generated docs as artifact
        uses: actions/upload-artifact@v4
        with:
          name: github-pages  # Rename the artifact to match what the deployment step is looking for
          path: |
            target/index.html
            target/catalog.json
          retention-days: 30
          if-no-files-found: warn

  deploy_to_github_pages_job:
    needs: dbt_prod_doc_serve_job
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 
